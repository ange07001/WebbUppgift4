---
const API_KEY = import.meta.env.PUBLIC_OPENWEATHER_API_KEY;

const url = Astro.url;
let cityQuery = url.searchParams.get("city") ?? "vaxjo";

// 5-day forecast
const forecastResponse = await fetch(
    `https://api.openweathermap.org/data/2.5/forecast?q=${cityQuery}&units=metric&appid=${API_KEY}`,
);

const forecastDates: string[] = [];
const forecastTemps: number[] = [];
const forecastRain: number[] = [];
const forecastPressure: number[] = [];

if (forecastResponse.ok){
    const forecastData = await forecastResponse.json();



    forecastData.list.forEach(
        (item: {
            dt: number;
            main: { temp: number; pressure: number };
            rain: { "3h": number };
        }) => {
            const date = new Date(item.dt * 1000);

            const formattedDate =
                date.toLocaleDateString("en-GB", {
                    weekday: "short",
                    day: "numeric",
                }) +
                " " +
                date.toLocaleTimeString("en-GB", {
                    hour: "2-digit",
                    minute: "2-digit",
                });

            const rainAmount = item.rain?.["3h"] ?? 0;

            forecastDates.push(formattedDate);
            forecastTemps.push(item.main.temp);
            forecastPressure.push(item.main.pressure);
            forecastRain.push(rainAmount);
        },
    );
}
---

<div class="container"
    id="charts-container"
    data-forecast-dates={JSON.stringify(forecastDates)}
    data-forecast-temps={JSON.stringify(forecastTemps)}
    data-forecast-rain={JSON.stringify(forecastRain)}
    data-forecast-pressure={JSON.stringify(forecastPressure)}
>
    <div style="height: 500px;" class="px-2">
        <canvas id="tempChart"></canvas>
    </div>

    <div style="height: 500px;" class="px-2">
        <canvas id="rainChart"></canvas>
    </div>

    <div style="height: 500px;" class="px-2">
        <canvas id="pressureChart"></canvas>
    </div>
</div>

<script>
    import Chart from "chart.js/auto";

    const container = document.getElementById("charts-container")!;
    const forecastDates = JSON.parse(container.dataset.forecastDates!);
    const forecastTemps = JSON.parse(container.dataset.forecastTemps!);
    const forecastRain = JSON.parse(container.dataset.forecastRain!);
    const forecastPressure = JSON.parse(container.dataset.forecastPressure!);

    const tempCtx = document.getElementById("tempChart") as HTMLCanvasElement;


    const borderColor = "rgb(158, 98, 255)"
    const fillAboveColor = "rgba(158, 98, 255, 0.4)"



    new Chart(tempCtx, {
        type: "line",
        data: {
            labels: forecastDates,
            datasets: [
                {
                    label: "Temperature (°C)",
                    data: forecastTemps,
                    borderWidth: 1,
                    tension: 0.4,
                    fill: { target: "origin", above: fillAboveColor },
                    borderColor: borderColor,
                },
            ],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: false,
                    title: {
                        display: true,
                        text: "Temperature (°C)",
                    },
                },
                x: {
                    title: {
                        display: true,
                        text: "Date & Time",
                    },
                    ticks: {
                        maxRotation: 45,
                        minRotation: 45,
                    },
                },
            },
            plugins: {
                title: {
                    display: true,
                    text:
                        "5-Day Temperature Forecast for " +
                        document.querySelector("h1")!.textContent,
                },
                tooltip: {
                    callbacks: {
                        title: (context) => {
                            return context[0].label;
                        },
                    },
                },
            },
        },
    });

    const rainCtx = document.getElementById("rainChart") as HTMLCanvasElement;

    new Chart(rainCtx, {
        type: "line",
        data: {
            labels: forecastDates,
            datasets: [
                {
                    label: "Rain (mm)",
                    data: forecastRain,
                    borderWidth: 1,
                    tension: 0.4,
                    fill: { target: "origin", above: fillAboveColor },
                    borderColor: borderColor,
                },
            ],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: false,
                    title: {
                        display: true,
                        text: "Rain (mm)",
                    },
                },
                x: {
                    title: {
                        display: true,
                        text: "Date & Time",
                    },
                    ticks: {
                        maxRotation: 45,
                        minRotation: 45,
                    },
                },
            },
            plugins: {
                title: {
                    display: true,
                    text:
                        "5-Day Rain Forecast for " +
                        document.querySelector("h1")!.textContent,
                },
                tooltip: {
                    callbacks: {
                        title: (context) => {
                            return context[0].label;
                        },
                    },
                },
            },
        },
    });

    const pressureCtx = document.getElementById(
        "pressureChart",
    ) as HTMLCanvasElement;

    new Chart(pressureCtx, {
        type: "line",
        data: {
            labels: forecastDates,
            datasets: [
                {
                    label: "Pressure (hPa)",
                    data: forecastPressure,
                    borderWidth: 1,
                    tension: 0.4,
                    fill: { target: "origin", above: fillAboveColor },
                    borderColor: borderColor,
                },
            ],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: false,
                    title: {
                        display: true,
                        text: "Pressure (hPa)",
                    },
                },
                x: {
                    title: {
                        display: true,
                        text: "Date & Time",
                    },
                    ticks: {
                        maxRotation: 45,
                        minRotation: 45,
                    },
                },
            },
            plugins: {
                title: {
                    display: true,
                    text:
                        "5-Day Air Pressure Forecast for " +
                        document.querySelector("h1")!.textContent,
                },
                tooltip: {
                    callbacks: {
                        title: (context) => {
                            return context[0].label;
                        },
                    },
                },
            },
        },
    });
</script>
